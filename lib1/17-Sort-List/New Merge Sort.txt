% Main predicate to sort a list using merge sort
merge_sort([], []).
merge_sort([X], [X]).
merge_sort(List, Sorted) :-
    List = [_, _|_],  % ensure at least two elements
    split(List, Left, Right),
    merge_sort(Left, SortedLeft),
    merge_sort(Right, SortedRight),
    merge(SortedLeft, SortedRight, Sorted).

% Split a list into two halves
split([], [], []).
split([X], [X], []).
split([X,Y|Rest], [X|Left], [Y|Right]) :-
    split(Rest, Left, Right).

% Merge two sorted lists
merge([], L, L).
merge(L, [], L).
merge([X|T1], [Y|T2], [X|T]) :-
    X =< Y,
    merge(T1, [Y|T2], T).
merge([X|T1], [Y|T2], [Y|T]) :-
    X > Y,
    merge([X|T1], T2, T).



%?- merge_sort([3, 1, 4, 1, 5, 9, 2], Sorted).
%Sorted = [1, 1, 2, 3, 4, 5, 9].